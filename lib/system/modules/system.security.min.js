define(["require","exports","application"],function(n,e,r){var t=e.module=angular.module("system.security",["ng","ngResource","system.http"]),l={xsrfHeaderName:"X-XSRF-TOKEN"},h={},g=null,u=r.uefi,a=r.routes;t.config(["$compileProvider","$httpProvider",function(n,e){u.progress("Application","setup system.security"),l=angular.merge(l,e.defaults),u.prodMode&&(n.debugInfoEnabled(!1),angular.reloadWithDebugInfo=angular.noop),delete window.jQuery,delete window.$}]).run(["$rootScope","securityService",function(n,u){n.security=u,n.$on("$routeChangeStart",function(n,e,r){var t=e.$$route;t&&t.extras.safe||t&&u.hasPermission(t.originalPath)||n.preventDefault()})}]).factory("authenticationService",["$resource","$rootScope","$route","httpService","securityService",function(u,a,i,o,c){return{authenticate:function(n,e,r){var t={username:n,password:e};angular.equals(g,t)||u("authentication").create(t,function(n){f(n,t)},function(n){s(),angular.isFunction(r)&&r(n)})},deauthenticate:function(){null!=g&&(g=null,h={},u("authentication").delete(s,s))},confirm:function(e,n){var r,t=o.getXSRFToken();t?(r={confirm:t},u("authentication/confirm/:token",{token:t}).read(function(n){f(n[0],r),angular.isFunction(e)&&e()},function(){angular.isFunction(n)&&n()||s()})):angular.isFunction(n)&&n()},keepalive:function(n,e){null!=g&&u("authentication/keepalive").read(function(){angular.isFunction(n)&&n()},function(n){angular.isFunction(e)&&e()||s()})}};function s(){g=null,h={},o.setXSRFToken(null),a.$broadcast(c.UNSECURED)}function f(n,e){g=e,h={};var r=[];angular.forEach(n.permissions||[],function(n){n.rights.length&&(h[n.module]=n.rights)}),angular.forEach(n.permissions||[],function(n){c.hasPermission(n.module)&&r.push(n.module)}),o.setXSRFToken(n[l.xsrfHeaderName]);var t,u=n.actions;u&&(o.setJaxRSActs(u),t=[],angular.forEach(u,function(e){var n=e.function.toUpperCase(),r=e.method;c.ACL[n]=e.rights,r="can"+n[0]+n.substring(1).toLowerCase(),n=c[r]=function(n){return n=n||i.current&&i.current.$$route.extras.path,c.hasPermission(n,e.rights)},e.change&&t.push(n)}),t.length&&(c.canChange=function(n){n=n||i.current&&i.current.$$route.extras.path;for(var e=0,r=t.length;e<r;e++)if(t[e](n))return!0;return!1})),a.$broadcast(c.ENFORCED,r,n.user||{})}}]).provider("securityService",[function(){var t=angular.isUndefined,u={CREATE:"C",READ:"R",MODIFY:"U",DELETE:"D"};this.acl=function(n){if(t(n))return u;u=n},this.$get=["$route",function(e){var r;return r={ACL:u,ENFORCED:"security.enforced",UNSECURED:"security.unsecured",hasPermission:function(e,n){if(a.filter(function(n){return n.extras.path===e}).length<1)return!1;if(t(e))return!1;var r=h[e];return!t(r)&&(t(n)?0<r.length:-1!=r.indexOf(n))},canCreate:function(n){return n=n||e.current&&e.current.$$route.extras.path,r.hasPermission(n,r.ACL.CREATE)},canRead:function(n){return n=n||e.current&&e.current.$$route.extras.path,r.hasPermission(n,r.ACL.READ)},canModify:function(n){return n=n||e.current&&e.current.$$route.extras.path,r.hasPermission(n,r.ACL.MODIFY)},canDelete:function(n){return n=n||e.current&&e.current.$$route.extras.path,r.hasPermission(n,r.ACL.DELETE)},canChange:function(n){return n=n||e.current&&e.current.$$route.extras.path,r.canCreate(n)||r.canModify(n)||r.canDelete(n)}}}]}])});