define(["require","exports","application"],function(e,t,r){var n=t.module=angular.module("system.http",["ng","ngResource"]),o={xsrfHeaderName:"X-XSRF-TOKEN"},i=Array.prototype.slice,a=r.uefi,u=a.native.desktop||a.native.mobile?function(){if(/https?:/.test(location.protocol))return location.pathname;var e=document.querySelector('meta[http-equiv="Content-Rest-Service"]');if(e)return e.content;throw new Error("No RPC meta in declaring")}():r.$$baseUrl(),c=null;u.endsWith("/")||(u+="/"),u+=r.services||"api/",delete r.services,n.config(["$provide","$httpProvider",function(e,t){a.progress("Application","setup system.http"),e.decorator("$resource",["$delegate",function(n){return function(){var e=i.apply(arguments);if(e.length&&!/^device:\/\//.test(e[0])){e[0]=u+e[0];var t={create:{method:"POST"},delete:{method:"DELETE"},read:{method:"GET",isArray:!0},update:{method:"PUT"}};for(var r in e[2]=e[2]||{},t)e[2][r]=t[r]}return n.apply(n,e)}}]),o=t.defaults,t.interceptors.push(["$q","httpService","$injector",function(t,e,r){var n=null;return{request:function(e){return c&&e.url.startsWith(u)&&(e.headers[o.xsrfHeaderName]=c),e},responseError:function(e){return 401===e.status&&(n=n||r.get("authenticationService")).deauthenticate(),t.reject(e)}}}])}]).service("httpService",function(){return{setXSRFToken:function(e){c=e}}})});